
# void ist implizit
SimpleTypes: int, double, string # /**/ // <!-- -->
ComplexTypes: <C1>
		
environment <Name>
	container <Name>
	link <Name> links
		<ContainerName1>
		…
	
repository <Name>
	interface <Name>
		<type> <signaturename>(<type> <parameterName>, …)
		…	

	component <name>
		require <requiredInterface>
		provide <providedInterface>

		<ProvidedInterface>.<signature>
			for <iterations>
				if <chance> 
					demand <demand>
				else
					<RequiredInterface>.<signature>()
	
	
assembly <Name>		
	composite <Name>
		contains <component1> as <assemblyContextName>
		require <interface> using <context>
		provide <interface> using <context>
	
		connect <interface> of <providingContext> to <requiringContext>


allocation <Name> of <SystemCompositeComponent>
	allocate <context> to <container>
	…

	